@inproceedings{Podolskiy:2017:QCA:3069383.3069390,
 author = {Podolskiy, Vladimir and Gerndt, Hans Michael and Benedict, Shajulin},
 title = {QoS-based Cloud Application Management: Approach and Architecture},
 booktitle = {Proceedings of the 4th Workshop on CrossCloud Infrastructures \& Platforms},
 series = {Crosscloud'17},
 year = {2017},
 isbn = {978-1-4503-4934-5},
 location = {Belgrade, Serbia},
 pages = {7:1--7:2},
 articleno = {7},
 numpages = {2},
 url = {http://doi.acm.org/10.1145/3069383.3069390},
 doi = {10.1145/3069383.3069390},
 acmid = {3069390},
 publisher = {ACM},
 address = {New York, NY, USA},
 keywords = {Cloud Resources Management, Graph, Quality of Services, Tuning Agent, Tuning Domain},
} 

@INPROCEEDINGS{7396164, 
author={A. {Bratterud} and A. {Walla} and H. {Haugerud} and P. E. {Engelstad} and K. {Begnum}}, 
booktitle={2015 IEEE 7th International Conference on Cloud Computing Technology and Science (CloudCom)}, 
title={IncludeOS: A Minimal, Resource Efficient Unikernel for Cloud Services}, 
year={2015}, 
pages={250-257}, 
keywords={C++ language;cloud computing;input-output programs;operating system kernels;resource allocation;IncludeOS;resource efficient unikernel;cloud services;cloud computing;elastically scaling services;single tasking library operating system;C++ language;extremely small disk-and memory footprint;efficient asynchronous I/O;OS-library;bootable disk image;DNS server;Operating systems;Libraries;Cloud computing;Hardware;Virtual machining;Standards;Virtual machine monitors;unikernel;library OS;full virtualization;virtio}, 
doi={10.1109/CloudCom.2015.89}, 
month={Nov},}


@book{Hightower:2017:KUR:3175917,
 author = {Hightower, Kelsey and Burns, Brendan and Beda, Joe},
 title = {Kubernetes: Up and Running Dive into the Future of Infrastructure},
 year = {2017},
 isbn = {1491935677, 9781491935675},
 edition = {1st},
 publisher = {O'Reilly Media, Inc.},
} 

@article{levine2016unik,
  title={Unik: A Platform for Automating Unikernels Compilation and Deployment},
  author={Levine, Idit},
  year={2016}
}

@article{madhavapeddy2014unikernels,
  title={Unikernels: the rise of the virtual library operating system},
  author={Madhavapeddy, Anil and Scott, David J},
  journal={Communications of the ACM},
  volume={57},
  number={1},
  pages={61--69},
  year={2014},
  publisher={ACM}
}

@misc{francia_2016, title={Unikernel Systems Joins Docker}, url={https://blog.docker.com/2016/01/unikernel/}, journal={Docker Blog}, author={Francia, Steve}, year={2016}, month={Jan}}

@misc{virtual, title={Virtual Kubelet}, url={https://virtual-kubelet.io/}, journal={Virtual Kubelet}}

@INPROCEEDINGS{iot-sec, 
author={K. {Zhao} and L. {Ge}}, 
booktitle={2013 Ninth International Conference on Computational Intelligence and Security}, 
title={A Survey on the Internet of Things Security}, 
year={2013}, 
volume={}, 
number={}, 
pages={663-667}, 
keywords={access control;authorisation;computer architecture;computer network security;Internet of Things;private key cryptography;routing protocols;sensor fusion;internet of things security;IoT security architecture;IoT security features;three-layer system structure;safety measures;perception layer;key management;key algorithm;security routing protocol;data fusion technology;authentication;access control;Authentication;Internet;Sensors;Computer architecture;Wireless sensor networks;Protocols;Internet of Things;Internet of Things Security;perception layer}, 
doi={10.1109/CIS.2013.145}, 
ISSN={}, 
month={Dec},}


 @misc{nanovms, 
 title={Unikernel Infrastructure}, url={https://nanovms.com/}, journal={NanoVMs}} 
 @misc{qemu, title={QEMU}, url={https://www.qemu.org/}, journal={QEMU}}

 @misc{coreos,
 title="CoreOS Hyperscales Linux By Making It Invisible",
 url={https://www.nextplatform.com/2015/02/25/coreos-hyperscales-linux-by-making-it-invisible/},
 journal={nextplatform.com},
 year={2015},
 month={June},
 author={ Morgan, Timothy Prickett}
 }

@misc{unfit-for-production,
title={Unikernels are unfit for production},
year={2016},
month={01},
author={Cantrill, Bryan},
url={https://www.joyent.com/blog/unikernels-are-unfit-for-production},
journal="joyent.com"
}


@misc{docker-acquisiton,
url="https://www.docker.com/docker-news-and-press/docker-acquires-unikernel-systems-extend-breadth-docker-platform",
year="2016",
month="01",
journal="docker.com"
}

@article{cloud-use-cases,
author = {Milenkoski, Aleksandar and Iosup, Alexandru and Kounev, Samuel and Sachs, Kai and Rygielski, Piotr and Ding, Jason and Cirne, Walfredo and Rosenberg, Florian},
year = {2013},
month = {05},
pages = {},
title = {Cloud Usage Patterns: A Formalism for Description of Cloud Usage Scenarios SPEC RG Cloud Working Group},
journal = {SPEC Technical Report}
}

@book{library-operating-system,
author = {Madhavapeddy, Anil and Mortier, Richard and Rotsos, Charalampos and Scott, David and Singh, Balraj and Gazagnaire, Thomas and Smith, Steven and Hand, Steven and Crowcroft, Jon},
file = {:Users/atakanyenel/Library/Application Support/Mendeley Desktop/Downloaded/Madhavapeddy et al. - Unknown - Unikernels Library Operating Systems for the Cloud.pdf:pdf},
isbn = {9781450318709},
keywords = {D1 [Programming Techniques],Organization and Design,Performance},
title = {{Unikernels: Library Operating Systems for the Cloud}}
}

@article{network-in-mirage,
abstract = {MirageOS is a modern library operating system written in the functional, memory-safe OCaml programming language. Users of MirageOS write application code in OCaml and link against various libraries provided by Mi-rageOS. These include a complete network stack (Ethernet, IP, TCP, UDP, TLS) written in pure OCaml as well as a number of backends for receiving and transmitting packets. We introduce some of MirageOS' techniques for handling raw memory. We detail two of the various networking backends offered by MirageOS as well as a library used for safe abstraction over raw memory. We additionally suggest possible performance improvements in MirageOS. Finally we compare MirageOS with ixy.ml, a small userspace driver for ixgbe-compatible NICs written entirely in OCaml.},
author = {Bonk, Fabian and Emmerich, Paul},
doi = {10.2313/NET-2019-06-1_10},
file = {:Users/atakanyenel/Library/Application Support/Mendeley Desktop/Downloaded/Bonk, Emmerich - Unknown - Networking in MirageOS.pdf:pdf},
keywords = {Index Terms-library operating system,OCaml,networking,unikernel},
title = {{Networking in MirageOS}},
url = {https://ocaml.org/}
}


@article{exokernel,
abstract = {Traditional operating systems limit the performance, flexibility, and functionality of applications by fixing the interface and implementation of operating system abstractions such as interprocess communication and virtual memory. The exokernel operating system architecture addresses this problem by providing application-level management of physical resources. In the exokernel architecture, a small kernel securely exports all hardware resources through a lowlevel interface to untrusted library...},
author = {Engler, D R and Kaaspoek, M F and O'Toole, J},
doi = {http://doi.acm.org/10.1145/224056.224076},
file = {:Users/atakanyenel/Desktop/thesis/literature/papers/2-engler95exokernel.pdf:pdf},
isbn = {0-89791-715-4},
journal = {Proceedings of the 15th ACM Symposium on Operating System Principles},
number = {December},
pages = {256--266},
title = {{ExoKernel: An Operating System Architecture for Application Level Resource Management}},
volume = {1},
year = {1995}
}

@techreport{nemesis,
abstract = {Support for multimedia applications by general purpose computing platforms has been the subject of considerable research. Much of this work is based on an evolutionary strategy in which small changes to existing systems are made. The approach adopted here is to start ab initio with no backward compatibility constraints. This leads to a novel structure for an operating system. The structure aims to decouple applications from one another and to provide multiplexing of all resources, not just the CPU, at a low level. The motivation for this structure, a design based on the structure, and its implementation on a number of hardware platforms is described.},
author = {Leslie, Ian and Mcauley, Derek and Black, Richard and Roscoe, Timothy and Barham, Paul and Evers, David and Fairbairns, Robin and Hyden, Eoin},
file = {:Users/atakanyenel/Library/Application Support/Mendeley Desktop/Downloaded/Leslie et al. - Unknown - The Design and Implementation of an Operating System to Support Distributed Multimedia Applications.pdf:pdf},
title = {{The Design and Implementation of an Operating System to Support Distributed Multimedia Applications}}
}

@techreport{openstack,
file = {:Users/atakanyenel/Library/Application Support/Mendeley Desktop/Downloaded/Unknown - Unknown - OpenStack An Overview.pdf:pdf},
title = {{OpenStack: An Overview}},
url = {www.openstack.org/start/},
year={2014}
}

@techreport{diamante,
abstract = {grow rapidly in 2019, transforming how applications are created, deployed, and managed. Enterprises are turning to containers to increase efficiency, facilitate application portability, and enable multi-cloud IT operations. Last year, in our inaugural Container Adoption Benchmark Survey we found that enterprises were still early in the container journey, but already demonstrating a strong preference for open source in the container stack, resulting in a strong trend from proprietary VM-based solutions to containers. This year we once again surveyed more than 500 IT leaders, and the results reinforce last year's findings, providing strong evidence that container technology is quickly entering the enterprise mainstream. The use of bare-metal containers is increasing as a way to reduce infrastructure complexity, deliver the full performance and efficiency benefits of the technology, and reduce costs by eliminating VMware licensing. Enterprises are focusing on a range of container use cases beyond cloud-native applications as they explore containerizing legacy applications and add support for big data and other workloads. Key Findings: n Cloud-native applications remain the number one container use case for 2019, according to 33 percent of respondents. n The database use case has moved up to a close second, chosen by 32 percent of respondents. n Respondents are running containers in multiple environments: on premises (45 percent), private cloud (29 percent), and public cloud (up to 37 percent). n Almost 56 percent who run containers on bare metal do so for higher performance; 36 percent choose bare metal to reduce costs. n Management complexity is the biggest bare-metal adoption challenge (36 percent) followed by time-to-deploy and keeping software up to date (both 22 percent). n For enterprises investing {\$}100k or more on containers, seventy percent are entering production in 2019, and more than one-third (34 percent) are running containers on bare metal. n For enterprises investing {\$}100k or more on containers, 43 percent plan to move some workloads to containers, while 26 percent intend to move most workloads to containers. EXECUTIVE SUMMARY},
file = {:Users/atakanyenel/Library/Application Support/Mendeley Desktop/Downloaded/Unknown - Unknown - Enterprise adoption of containers and Kubernetes continues to.pdf:pdf},
title ={Enterprise adoption of containers and Kubernetes continues to},
url = {https://diamanti.com/wp-content/uploads/2019/06/Diamanti_2019_Container_Survey.pdf},
year={2019}
}

@misc{kubernetes-load,
title = {{Building large clusters - Kubernetes}},
url = {https://kubernetes.io/docs/setup/best-practices/cluster-large/{\#}:{~}:targetText=16{\%}2C Kubernetes supports clusters with,more than 150000 total pods},
urldate = {2019-11-26}
}

@misc{istio,
title = {{Istio}},
url = {https://istio.io/},
urldate = {2019-11-26}
}

@misc{helm,
title = {{Helm}},
url = {https://helm.sh/},
urldate = {2019-11-26}
}


@misc{envoy,
title = {{Envoy}},
url = {https://www.envoyproxy.io/},
urldate = {2019-11-26}
}
